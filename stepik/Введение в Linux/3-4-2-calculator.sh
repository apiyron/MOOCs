: '
Напишите калькулятор на bash. При запуске ваш скрипт должен ожидать
ввода пользователем команды (при этом на экран выводить ничего не нужно).
Команды могут быть трех типов:

Слово "exit". В этом случае скрипт должен вывести на экран слово "bye"
и завершить работу.
Три аргумента через пробел -- первый операнд (целое число),
операция (одна из "+", "-", "*", "/", "%", "**") и
второй операнд (целое число). 
В этом случае нужно произвести указанную операцию над заданными числами
и вывести результат на экран.
После этого переходим в режим ожидания новой команды.
Любая другая команда из одного аргумента или из трех аргументов,
но с операцией не из списка.
В этом случае нужно вывести на экран слово "error" и завершить работу.
Чтобы проверить работу скрипта,
вы можете записать сразу несколько команд в файл
и передать его скрипту на stdin
(т.е. выполнить ./script.sh < input.txt).
В этом случае он должен вывести сразу все ответы на экран.
Например, если входной файл будет следующего содержания:
10 + 1
2 ** 10
exit
то на экране будет:
11
1024
bye
Если же на вход поступит следующий файл:
3 - 5
2/10
exit
то на экране будет:
-2
error
т.к. вторая команда была некорректной
(в ней всего один аргумент, т.к. нет пробелов между числами и операцией,
а единственная допустимая команда из одного аргумента это "exit").
'
is_over ()
{
	if [ "$arg1" = "exit" ]; then
		echo "bye"; exit
	fi
	if [ "$arg1" -eq "$arg1" ] 2>/dev/null && [ "$arg3" -eq "$arg3" ] 2>/dev/null
	then err=1;
	else
		echo "error"; exit
	fi
	if [[ -z $arg1 || -z $arg2 || -z $arg3 ]]
	then
		echo "error"; exit
	fi
}
while true
do
	read arg1 arg2 arg3
	is_over $arg1 $arg2 $arg3
	case "$arg2" in
		'*') let "res = $arg1 * $arg3";;
		'-') let "res = $arg1 - $arg3";;
		'+') let "res = $arg1 + $arg3";;
		'/') let "res = $arg1 / $arg3";;
		'%') let "res = $arg1 % $arg3";;
		'**')let "res = $arg1 ** $arg3";;
		*) echo "error arg2 not operation"; exit;;
	esac
	echo $res
done
